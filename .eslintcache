[{"/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/reportWebVitals.js":"1","/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/index.js":"2","/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/App.js":"3","/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/components/Song.js":"4","/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/components/Player.js":"5","/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/components/LibrarySong.js":"6","/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/components/Library.js":"7","/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/components/Nav.js":"8","/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/data.js":"9"},{"size":362,"mtime":1606311102716,"results":"10","hashOfConfig":"11"},{"size":478,"mtime":1606311394706,"results":"12","hashOfConfig":"11"},{"size":2422,"mtime":1606384240566,"results":"13","hashOfConfig":"11"},{"size":288,"mtime":1606316985901,"results":"14","hashOfConfig":"11"},{"size":3700,"mtime":1606387287702,"results":"15","hashOfConfig":"11"},{"size":1014,"mtime":1606383444490,"results":"16","hashOfConfig":"11"},{"size":701,"mtime":1606324301282,"results":"17","hashOfConfig":"11"},{"size":438,"mtime":1606324358709,"results":"18","hashOfConfig":"11"},{"size":17969,"mtime":1606389532477,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"774kzx",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/reportWebVitals.js",[],"/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/index.js",[],"/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/App.js",[],["40","41"],"/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/components/Song.js",[],"/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/components/Player.js",["42"],"import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faStepBackward,\n  faStepForward,\n  faPause,\n  faVolumeDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  songInfo,\n  setSongInfo,\n  currentSong,\n  songs,\n  setCurrentSong,\n  setSongs,\n}) => {\n  const [activeVolume, setActiveVolume] = useState(false);\n  //UseEffect Update List\n  const activeLibraryHandler = (nextPrev) => {\n    const newSongs = songs.map((song) => {\n      if (song.id === nextPrev.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n\n    setSongs(newSongs);\n  };\n\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n  //Event Handlers\n  function getTime(time) {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  }\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n\n    //Forward BAck\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n  const changeVolume = (e) => {\n    let value = e.target.value;\n    audioRef.current.volume = value;\n    setSongInfo({ ...songInfo, volume: value });\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div className=\"track\">\n          <input\n            value={songInfo.currentTime}\n            type=\"range\"\n            max={songInfo.duration || 0}\n            min={0}\n            onChange={dragHandler}\n          />\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faStepBackward}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faStepForward}\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n        />\n        <FontAwesomeIcon\n          className=\"volume\"\n          onClick={() => setActiveVolume(!activeVolume)}\n          icon={faVolumeDown}\n        />\n        {activeVolume && (\n          <input\n            onChange={changeVolume}\n            value={songInfo.volume}\n            max=\"1\"\n            min=\"0\"\n            step=\"0.01\"\n            type=\"range\"\n            className=\"volume\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/components/LibrarySong.js",[],"/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/components/Library.js",[],"/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/components/Nav.js",[],"/Users/jamiechandler/Desktop/Coding/React course/music-player/react-player/src/data.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":42,"column":9,"nodeType":"49","messageId":"50","endLine":42,"endColumn":18},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'trackAnim' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]