{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","currentSong","songs","setCurrentSong","setSongs","useState","activeVolume","setActiveVolume","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","animationPercentage","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","className","currentTime","value","type","max","duration","min","onChange","e","target","onClick","size","icon","faStepBackward","pause","faPause","faPlay","faStepForward","faVolumeDown","volume","step","Song","src","cover","alt","name","artist","LibrarySong","songSelectHandler","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","color","uuidv4","App","useRef","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","console","log","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e152d367.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faStepBackward,\n  faStepForward,\n  faPause,\n  faVolumeDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  songInfo,\n  setSongInfo,\n  currentSong,\n  songs,\n  setCurrentSong,\n  setSongs,\n}) => {\n  const [activeVolume, setActiveVolume] = useState(false);\n  //UseEffect Update List\n  const activeLibraryHandler = (nextPrev) => {\n    const newSongs = songs.map((song) => {\n      if (song.id === nextPrev.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n\n    setSongs(newSongs);\n  };\n\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n  //Event Handlers\n  function getTime(time) {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  }\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n\n    //Forward BAck\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n  const changeVolume = (e) => {\n    let value = e.target.value;\n    audioRef.current.volume = value;\n    setSongInfo({ ...songInfo, volume: value });\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div className=\"track\">\n          <input\n            value={songInfo.currentTime}\n            type=\"range\"\n            max={songInfo.duration || 0}\n            min={0}\n            onChange={dragHandler}\n          />\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faStepBackward}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faStepForward}\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n        />\n        <FontAwesomeIcon\n          onClick={() => setActiveVolume(!activeVolume)}\n          icon={faVolumeDown}\n        />\n        {activeVolume && (\n          <input\n            onChange={changeVolume}\n            value={songInfo.volume}\n            max=\"1\"\n            min=\"0\"\n            step=\"0.01\"\n            type=\"range\"\n            className=\"volume\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\nconst Song = ({ currentSong }) => {\n  return (\n    <div className=\"song-container\">\n      <img src={currentSong.cover} alt={currentSong.name}></img>\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import React from \"react\";\n\nconst LibrarySong = ({\n  song,\n  songs,\n  setCurrentSong,\n  id,\n  audioRef,\n  isPlaying,\n  setSongs,\n}) => {\n  const songSelectHandler = async () => {\n    const selectedSong = songs.filter((state) => state.id === id);\n    await setCurrentSong({ ...selectedSong[0] });\n\n    //Set Active in library\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n\n    //Check if song is playing\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img alt={song.name} src={song.cover}></img>\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import React from \"react\";\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n  libraryStatus,\n}) => {\n  return (\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySong\n            songs={songs}\n            song={song}\n            setCurrentSong={setCurrentSong}\n            id={song.id}\n            key={song.id}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            setSongs={setSongs}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\n  return (\n    <nav>\n      <h1>Low-Fidelity</h1>\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\n        Library\n        <FontAwesomeIcon icon={faMusic} />\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import { v4 as uuidv4 } from \"uuid\";\n\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Sunsets\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/bb0db71fd74f15627e9912ad2278c13cee72ac2d-1024x1024.jpg\",\n      artist: \"Aso\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10310\",\n      color: [\"#028984\", \"#C58D69\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Cocktail Hour\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg\",\n      artist: \"Strehlow\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9352\",\n      color: [\"#8A3642\", \"#FBF1D5\"],\n      id: uuidv4(),\n      active: false,\n    },\n  ];\n}\n\nexport default chillHop;\n","import React, { useState, useRef } from \"react\";\n\n//Import Styles\nimport \"./styles/app.scss\";\n\n//Adding Components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\n//Import Music Data\nimport data from \"./data\";\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  //State\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //Calculate the Percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animationPercentage = Math.round(\n      (roundedCurrent / roundedDuration) * 100\n    );\n    console.log(animationPercentage);\n\n    setSongInfo({ ...songInfo, currentTime: current, duration });\n  };\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song isPlaying={isPlaying} currentSong={currentSong} />\n      <Player\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        audioRef={audioRef}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      \\{\" \"}\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}